<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <name>Check_if_Contract_Found</name>
        <label>Check if Contract Found ?</label>
        <locationX>446</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_if_Both_Feedback_and_Contract_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Service_Contract</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Feedback</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Reciprocal_With_SC_and_FB</targetReference>
            </connector>
            <label>Check if Both Feedback and Contract Found ?</label>
        </rules>
        <rules>
            <name>Check_if_Service_Contract_Found</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Service_Contract</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Reciprocal_With_SC</targetReference>
            </connector>
            <label>Check if Service Contract Found</label>
        </rules>
        <rules>
            <name>Check_if_Feedback_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Feedback</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Reciprocal_With_FB</targetReference>
            </connector>
            <label>Check if Feedback Found</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>Get15Member</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Record.Member_ID__c}, 15)</expression>
    </formulas>
    <interviewLabel>AAA_LinkReciprocaltoServiceContract {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AAA_LinkReciprocaltoServiceContract</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Feedback</name>
        <label>Get Feedback</label>
        <locationX>446</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Contract_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Authorization_Code__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CDX_Authorization_Code__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Authorization_Code__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Feedback__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Service_Contract</name>
        <label>Get Service Contract</label>
        <locationX>446</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Feedback</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Membership_Number_15_Digits__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get15Member</elementReference>
            </value>
        </filters>
        <filters>
            <field>StartDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Service_Call_Date__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Service_Call_Date__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceContract</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Reciprocal_With_FB</name>
        <label>Update Reciprocal With FB</label>
        <locationX>578</locationX>
        <locationY>647</locationY>
        <inputAssignments>
            <field>Feedback__c</field>
            <value>
                <elementReference>Get_Feedback.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Is_Link_Batch_Processed__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Member__c</field>
            <value>
                <elementReference>Get_Feedback.Account__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Reciprocal_With_SC</name>
        <label>Update Reciprocal With SC</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <inputAssignments>
            <field>Is_Link_Batch_Processed__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Member__c</field>
            <value>
                <elementReference>Get_Service_Contract.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Service_Contract__c</field>
            <value>
                <elementReference>Get_Service_Contract.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Reciprocal_With_SC_and_FB</name>
        <label>Update Reciprocal With SC and FB</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <inputAssignments>
            <field>Feedback__c</field>
            <value>
                <elementReference>Get_Feedback.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Is_Link_Batch_Processed__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Member__c</field>
            <value>
                <elementReference>Get_Service_Contract.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Service_Contract__c</field>
            <value>
                <elementReference>Get_Service_Contract.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Service_Contract</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5)</filterLogic>
        <filters>
            <field>Is_Link_Batch_Processed__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Member_ID__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Record_Type_Developer_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Inbound_Payment_Requests</stringValue>
            </value>
        </filters>
        <filters>
            <field>Feedback__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Service_Contract__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Reciprocal__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
