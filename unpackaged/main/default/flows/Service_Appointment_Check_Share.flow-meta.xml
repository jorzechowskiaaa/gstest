<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Get_Row_Count</name>
        <label>Get Row Count</label>
        <locationX>479</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>Row_Count</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_existing_WO_share_records_with_Old_User</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_WO_order_share_exists</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Share_Already_Exists</name>
        <label>Check if Share Already Exists</label>
        <locationX>50</locationX>
        <locationY>2771</locationY>
        <defaultConnector>
            <targetReference>Create_SA_Share</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SA_Share_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Check_Existing_Share_record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Existing_Share_record_for_Work_Order</targetReference>
            </connector>
            <label>SA Share Exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_share_exists_with_Previous_user</name>
        <label>Check if share exists with Previous user</label>
        <locationX>479</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Get_existing_WO_share_records_with_Old_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Exists_Previous_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_existing_Share_Records_with_Old_User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Share</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_WO_order_share_exists</name>
        <label>Check if WO share exists</label>
        <locationX>479</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>Service_Territory_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Row_Count</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_WO_Shares</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_Changed_from_Null_to_Other_User</name>
        <label>If Changed from Null to Other User</label>
        <locationX>248</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Get_existing_Share_Records_with_Old_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Changed_from_Null_to_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Service_Resource__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Service_Resource_not_null</targetReference>
            </connector>
            <label>Yes, Changed from Null to User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Service_Resource_not_null</name>
        <label>Is New Service Resource not null</label>
        <locationX>248</locationX>
        <locationY>2555</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Service_Resource__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Existing_Share_record</targetReference>
            </connector>
            <label>Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Service_Appointment_Has_Share_to_Old_Service_Territory</name>
        <label>Service Appointment Has Share to Old Service Territory</label>
        <locationX>325</locationX>
        <locationY>1679</locationY>
        <defaultConnector>
            <targetReference>Get_Work_Order_Shares</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Has_Share</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Service_Appointment_Shares</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Service_Appointment_Group_Share</targetReference>
            </connector>
            <label>Has Share</label>
        </rules>
    </decisions>
    <decisions>
        <name>Service_Territory_Changed</name>
        <label>Service Territory Changed?</label>
        <locationX>479</locationX>
        <locationY>1355</locationY>
        <defaultConnector>
            <targetReference>Is_Service_Resource_not_null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Service_Territory_Changed_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.ServiceTerritory.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.ServiceTerritory.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Prior_Public_Group</targetReference>
            </connector>
            <label>Service Territory Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Work_Order_has_share_to_Old_Service_Territory</name>
        <label>Work Order has share to Old Service Territory</label>
        <locationX>325</locationX>
        <locationY>2087</locationY>
        <defaultConnector>
            <targetReference>Is_Service_Resource_not_null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Has_WO_Share</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Work_Order_Shares</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Work_Order_Group_Share</targetReference>
            </connector>
            <label>Has WO Share</label>
        </rules>
    </decisions>
    <decisions>
        <name>Work_Order_Share_Exists</name>
        <label>Work Order Share Exists?</label>
        <locationX>50</locationX>
        <locationY>3179</locationY>
        <defaultConnector>
            <targetReference>Create_WO_Share</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Existing_Work_Order_Share</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Check_Existing_Share_record_for_Work_Order</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Existing Work Order Share</label>
        </rules>
    </decisions>
    <description>SSFI - 899 AGB 2/24/2025 AGB Dev Ops 7/23</description>
    <environments>Default</environments>
    <interviewLabel>Service Appointment - Check Share {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Service Appointment - Check Share</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_SA_Share</name>
        <label>Create SA Share</label>
        <locationX>138</locationX>
        <locationY>2879</locationY>
        <connector>
            <targetReference>Check_Existing_Share_record_for_Work_Order</targetReference>
        </connector>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Service_Resource__r.RelatedRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <object>ServiceAppointmentShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_WO_Share</name>
        <label>Create WO Share</label>
        <locationX>182</locationX>
        <locationY>3287</locationY>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Service_Resource__r.RelatedRecordId</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrderShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Service_Appointment_Group_Share</name>
        <label>Delete Service Appointment Group Share</label>
        <locationX>193</locationX>
        <locationY>1787</locationY>
        <connector>
            <targetReference>Get_Work_Order_Shares</targetReference>
        </connector>
        <inputReference>Get_Service_Appointment_Shares</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_Share</name>
        <label>Delete Share</label>
        <locationX>347</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Get_existing_WO_share_records_with_Old_User</targetReference>
        </connector>
        <inputReference>Get_existing_Share_Records_with_Old_User</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_WO_Shares</name>
        <label>Delete WO Shares</label>
        <locationX>347</locationX>
        <locationY>1163</locationY>
        <connector>
            <targetReference>Service_Territory_Changed</targetReference>
        </connector>
        <inputReference>Get_existing_WO_share_records_with_Old_User</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_Work_Order_Group_Share</name>
        <label>Delete Work Order Group Share</label>
        <locationX>193</locationX>
        <locationY>2195</locationY>
        <connector>
            <targetReference>Is_Service_Resource_not_null</targetReference>
        </connector>
        <inputReference>Get_Work_Order_Shares</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Check_Existing_Share_record</name>
        <label>Check Existing Share record with new User</label>
        <locationX>50</locationX>
        <locationY>2663</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Share_Already_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Service_Resource__r.RelatedRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceAppointmentShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Check_Existing_Share_record_for_Work_Order</name>
        <label>Check Existing Share record for Work Order</label>
        <locationX>50</locationX>
        <locationY>3071</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Work_Order_Share_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Service_Resource__r.RelatedRecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrderShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_existing_Share_Records_with_Old_User</name>
        <label>Get existing Share Records with Old User</label>
        <locationX>479</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_share_exists_with_Previous_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Service_Resource__r.RelatedRecord.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceAppointmentShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_existing_WO_share_records_with_Old_User</name>
        <label>Get existing WO share records with Old User</label>
        <locationX>479</locationX>
        <locationY>839</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Row_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Service_Resource__r.RelatedRecord.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>WorkOrderShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Prior_Public_Group</name>
        <label>Get Prior Public Group</label>
        <locationX>325</locationX>
        <locationY>1463</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Service_Appointment_Shares</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.ServiceTerritory.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Service_Appointment_Shares</name>
        <label>Get Service Appointment Shares</label>
        <locationX>325</locationX>
        <locationY>1571</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Service_Appointment_Has_Share_to_Old_Service_Territory</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Prior_Public_Group.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceAppointmentShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Work_Order_Shares</name>
        <label>Get Work Order Shares</label>
        <locationX>325</locationX>
        <locationY>1979</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Work_Order_has_share_to_Old_Service_Territory</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Prior_Public_Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrderShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>122</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>If_Changed_from_Null_to_Other_User</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Service_Resource__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Row_Count</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
