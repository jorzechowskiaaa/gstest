<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <description>-Whenever the Scheduled Start Time is populated on a Breakdown Service Appointment, we want to update the &quot;Scheduled Start&quot; field on the Parent Case
-Added Update to populate Primary Service Territory on Case
-Changed from Scheduled Start to Arrival Window Start + 30 mins
-Added Arrival Window Start and End to Case
-Updated Delta time from 30 min to 15 mins</description>
    <environments>Default</environments>
    <formulas>
        <name>varArrivalWindowPlus</name>
        <dataType>DateTime</dataType>
        <expression>{!varArrivalWindow} + (15/1440)</expression>
    </formulas>
    <interviewLabel>ReformingPTA {!$Flow.CurrentDateTime}</interviewLabel>
    <label>ReformingPTA</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getCase</name>
        <label>getCase</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>updateCaseArrivalWindow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getWorkOrder.CaseId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getServiceAppointment</name>
        <label>getServiceAppointment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getWorkOrder</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Priority_Subject__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Breakdown</stringValue>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>varArrivalWindow</assignToReference>
            <field>ArrivalWindowStartTime</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>varPrimaryServiceTerritory</assignToReference>
            <field>ServiceTerritoryId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>getWorkOrder</name>
        <label>getWorkOrder</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getCase</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentRecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrder</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>updateCaseArrivalWindow</name>
        <label>updateCaseArrivalWindow</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getWorkOrder.Case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Arrival_Window_Case__c</field>
            <value>
                <elementReference>varArrivalWindow</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Arrival_Window_End_Case__c</field>
            <value>
                <elementReference>varArrivalWindowPlus</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FSL_Primary_Service_Territory__c</field>
            <value>
                <elementReference>varPrimaryServiceTerritory</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getServiceAppointment</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Priority_Subject__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Breakdown</stringValue>
            </value>
        </filters>
        <filters>
            <field>ArrivalWindowStartTime</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>varArrivalWindow</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varPrimaryServiceTerritory</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varScheduledStart</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
