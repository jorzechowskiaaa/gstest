<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Run_Outgoing_Reciprocal_Logic</name>
        <label>Run Outgoing Reciprocal Logic</label>
        <locationX>182</locationX>
        <locationY>1608</locationY>
        <actionName>AAAOutgoingReciprocalFlowHelper</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Has_Reciprocal_To_Insert</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>authCode</name>
            <value>
                <elementReference>FeedbackAuthCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>boSettings</name>
            <value>
                <elementReference>Get_Org_BO_Settings</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>contact</name>
            <value>
                <elementReference>Contact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>fac</name>
            <value>
                <elementReference>ServiceTerritory</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>iliList</name>
            <value>
                <elementReference>Get_Invoice_Line_Items</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>invc</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>rec</name>
            <value>
                <elementReference>ExistingReciprocal</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recTCode</name>
            <value>
                <elementReference>ReciprocalTCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recTypeId</name>
            <value>
                <elementReference>OutgoingPaymentRecTypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>wo</name>
            <value>
                <elementReference>WorkOrder</elementReference>
            </value>
        </inputParameters>
        <nameSegment>AAAOutgoingReciprocalFlowHelper</nameSegment>
        <outputParameters>
            <assignToReference>hasInvcToUpdate</assignToReference>
            <name>hasInvcToUpdate</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>hasRecToInsert</assignToReference>
            <name>hasRecToInsert</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>hasRecToUpdate</assignToReference>
            <name>hasRecToUpdate</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>invcToUpdate</assignToReference>
            <name>invc</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>recToInsert</assignToReference>
            <name>recToInsert</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>recToUpdate</assignToReference>
            <name>recToUpdate</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Existing_Reciprocal_1</name>
        <label>Assign Existing Reciprocal</label>
        <locationX>50</locationX>
        <locationY>1416</locationY>
        <assignmentItems>
            <assignToReference>ExistingReciprocal</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Existing_Reciprocal</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Run_Outgoing_Reciprocal_Logic</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Existing_Reciprocal_2</name>
        <label>Assign Existing Reciprocal</label>
        <locationX>314</locationX>
        <locationY>1416</locationY>
        <assignmentItems>
            <assignToReference>ExistingReciprocal</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Existing_Reciprocal_Adjustment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Run_Outgoing_Reciprocal_Logic</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Get_Work_Order_Contact_And_Service_Territory_From_Invoice_Record</name>
        <label>Get Work Order, Contact, And Service Territory From Invoice Record</label>
        <locationX>182</locationX>
        <locationY>252</locationY>
        <assignmentItems>
            <assignToReference>WorkOrder</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Work_Order__r</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ServiceTerritory</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Service_Territory__r</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contact</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Work_Order__r.Contact</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Org_BO_Settings</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Has_Invoice_To_Update</name>
        <label>Has Invoice To Update?</label>
        <locationX>182</locationX>
        <locationY>2316</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Invc_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>hasInvcToUpdate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Invoice</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Reciprocal_To_Insert</name>
        <label>Has Reciprocal To Insert?</label>
        <locationX>182</locationX>
        <locationY>1716</locationY>
        <defaultConnector>
            <targetReference>Has_Reciprocal_To_Update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Insert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>hasRecToInsert</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Insert_Reciprocal</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Reciprocal_To_Update</name>
        <label>Has Reciprocal To Update?</label>
        <locationX>182</locationX>
        <locationY>2016</locationY>
        <defaultConnector>
            <targetReference>Has_Invoice_To_Update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>hasRecToUpdate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Reciprocal</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Trouble_Code</name>
        <label>Has Trouble Code?</label>
        <locationX>182</locationX>
        <locationY>900</locationY>
        <defaultConnector>
            <targetReference>Is_Invoice_Type_Reciprocals</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TroubleCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Reciprocal_T_Code</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Invoice_Type_Reciprocals</name>
        <label>Is Invoice Type &#39;Reciprocals&#39;?</label>
        <locationX>182</locationX>
        <locationY>1200</locationY>
        <defaultConnector>
            <targetReference>Get_Existing_Reciprocal_Adjustment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Reciprocal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reciprocals</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Existing_Reciprocal</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>04/10/2024: v5 PR893288-4781</description>
    <environments>Default</environments>
    <interviewLabel>Batch Create Outgoing Reciprocal {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Batch Create Outgoing Reciprocal</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Insert_Reciprocal</name>
        <label>Insert Reciprocal</label>
        <locationX>50</locationX>
        <locationY>1824</locationY>
        <connector>
            <targetReference>Has_Reciprocal_To_Update</targetReference>
        </connector>
        <inputReference>recToInsert</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_Auth_Code_From_Feedback_Record</name>
        <label>Get Auth Code From Feedback Record</label>
        <locationX>182</locationX>
        <locationY>684</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Trouble_Code</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Work_Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <object>Feedback__c</object>
        <outputAssignments>
            <assignToReference>FeedbackAuthCode</assignToReference>
            <field>Authorization_Code__c</field>
        </outputAssignments>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>Get_Existing_Reciprocal</name>
        <label>Get Existing Reciprocal</label>
        <locationX>50</locationX>
        <locationY>1308</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Existing_Reciprocal_1</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5) AND 6</filterLogic>
        <filters>
            <field>Work_Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>Record_Type_Developer_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Outbound_Payment_Requests</stringValue>
            </value>
        </filters>
        <filters>
            <field>Dispute_Code__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Dispute_Code__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <filters>
            <field>Service_Facility_ID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Service_Territory__r.Facility_Number__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Reciprocal__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Existing_Reciprocal_Adjustment</name>
        <label>Get Existing Reciprocal Adjustment</label>
        <locationX>314</locationX>
        <locationY>1308</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Existing_Reciprocal_2</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5) AND 6 AND 7</filterLogic>
        <filters>
            <field>Work_Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>Record_Type_Developer_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Outbound_Payment_Requests</stringValue>
            </value>
        </filters>
        <filters>
            <field>Dispute_Code__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Dispute_Code__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <filters>
            <field>Service_Facility_ID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Service_Territory__r.Facility_Number__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Amended_Charges_Indicator__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>A</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Reciprocal__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Invoice_Line_Items</name>
        <label>Get Invoice Line Items</label>
        <locationX>182</locationX>
        <locationY>576</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Auth_Code_From_Feedback_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Invoice__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Invoice_Line_Item__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Org_BO_Settings</name>
        <label>Get Org BO Settings</label>
        <locationX>182</locationX>
        <locationY>360</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Outgoing_Reciprocal_Record_Type_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Club_Code__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BackOffice_Settings__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Outgoing_Reciprocal_Record_Type_Id</name>
        <label>Get Outgoing Reciprocal Record Type Id</label>
        <locationX>182</locationX>
        <locationY>468</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Invoice_Line_Items</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Outbound_Payment_Requests</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reciprocal__c</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>OutgoingPaymentRecTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Reciprocal_T_Code</name>
        <label>Get Reciprocal T Code</label>
        <locationX>50</locationX>
        <locationY>1008</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Invoice_Type_Reciprocals</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Label</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>TroubleCode</elementReference>
            </value>
        </filters>
        <object>Local_to_Reciprocal_T_Code_Mapping__mdt</object>
        <outputAssignments>
            <assignToReference>ReciprocalTCode</assignToReference>
            <field>T_Code__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Trouble_Code</name>
        <label>Get Trouble Code</label>
        <locationX>182</locationX>
        <locationY>792</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_Trouble_Code</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Work_Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PROBLEM</stringValue>
            </value>
        </filters>
        <object>FSL_TroubleCode__c</object>
        <outputAssignments>
            <assignToReference>TroubleCode</assignToReference>
            <field>Code__c</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_Invoice</name>
        <label>Update Invoice</label>
        <locationX>50</locationX>
        <locationY>2424</locationY>
        <inputReference>invcToUpdate</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Reciprocal</name>
        <label>Update Reciprocal</label>
        <locationX>50</locationX>
        <locationY>2124</locationY>
        <connector>
            <targetReference>Has_Invoice_To_Update</targetReference>
        </connector>
        <inputReference>recToUpdate</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Work_Order_Contact_And_Service_Territory_From_Invoice_Record</targetReference>
        </connector>
        <filterLogic>(1 OR 2) AND 3 AND 4</filterLogic>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reciprocals</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reciprocal Adjustments</stringValue>
            </value>
        </filters>
        <filters>
            <field>Reciprocal_Sync_Ready__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ready for Processing</stringValue>
            </value>
        </filters>
        <object>Invoice__c</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2024-02-01</startDate>
            <startTime>02:30:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>Contact</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>ExistingReciprocal</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Reciprocal__c</objectType>
    </variables>
    <variables>
        <name>FeedbackAuthCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>hasInvcToUpdate</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>hasRecToInsert</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>hasRecToUpdate</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>invcToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Invoice__c</objectType>
    </variables>
    <variables>
        <name>OutgoingPaymentRecTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ReciprocalTCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recToInsert</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Reciprocal__c</objectType>
    </variables>
    <variables>
        <name>recToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Reciprocal__c</objectType>
    </variables>
    <variables>
        <name>ServiceTerritory</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceTerritory</objectType>
    </variables>
    <variables>
        <name>TroubleCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>WorkOrder</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkOrder</objectType>
    </variables>
</Flow>
